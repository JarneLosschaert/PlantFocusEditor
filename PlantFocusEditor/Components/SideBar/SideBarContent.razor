@inject IJSRuntime JS

<section class="side-bar-content">
    <div class="content-header">
        <h2>@LabelEditor._SelectedTab</h2>
    </div>
    <div class="content">
        @switch (LabelEditor._SelectedTab)
        {
            case SideBarTabs.Templates:
                <TemplatesContent />
                break;
            case SideBarTabs.Text:
                <TextContent />
                break;
            case SideBarTabs.Images:
                <ImagesContent @ref="_imagesContent" OnRendered="OnImagesContentRendered" />
                break;
            case SideBarTabs.Elements:
                <ElementsContent />
                break;
            case SideBarTabs.Codes:
                <CodesContent />
                break;
            case SideBarTabs.Properties:
                <PropertiesContent />
                break;
        }
    </div>
</section>


@code {
    [CascadingParameter]
    public LabelEditor? LabelEditor { get; set; }

    private ImagesContent? _imagesContent;
    private Dictionary<string, string> _imagesToAdd = new();

    private void OnImagesContentRendered()
    {
        foreach (KeyValuePair<string, string> image in _imagesToAdd)
        {
            _imagesContent?.AddImage(image.Key, image.Value);
        }
        _imagesToAdd.Clear();
    }
}
