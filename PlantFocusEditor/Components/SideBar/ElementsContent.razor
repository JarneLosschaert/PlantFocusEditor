@inject IJSRuntime JS;

<article class="elements-content">
    <div class="elements-header">
        <h3 @onclick="() => _shapesSelected = true" class="@(_shapesSelected ? "selected" : "")">Shapes</h3>
        <h3 @onclick="() => _shapesSelected = false" class="@(!_shapesSelected ? "selected" : "")">Icons</h3>
    </div>
    <div class="elements-list">
        <ul>
            @if (_shapesSelected)
            {
                foreach (var shape in shapes)
                {
                    <li @onclick="() => AddElement(shape)">
                        @((MarkupString)shape)
                    </li>
                }
            }
            else
            {
                @for (int i = 0; i < 19; i++)
                {
                    <li>
                        <img src="../../sample-data/icon.png" alt="icon" />
                    </li>
                }
            }
        </ul>
    </div>
</article>

@code {
    private IJSObjectReference? _module;
    private bool _shapesSelected = true;

    List<string> shapes = new List<string>
{
    // Shape 6: Square
    @"<svg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'><path fill='#000000' d='M2 2h20v20H2z'/></svg>",

    // Shape 3: filled cirle using path
    // @"<svg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'><path fill='#000000' d='M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z'/></svg>",

    // Shape 1: Triangle pointing up
    @"<svg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'><path fill='#000000' d='M12 3L2 21h20z'/></svg>",

    // Shape 2: Diamond
    @"<svg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'><path fill='#000000' d='M12 2L2 12l10 10 10-10z'/></svg>",

    // Shape 4: Heart
    @"<svg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'><path fill='#000000' d='M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z'/></svg>",


    // Shape 8: Hexagon
    @"<svg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'><path fill='#000000' d='M12 2l-8 6v8l8 6 8-6v-8l-8-6z'/></svg>",

    // blob
    @"<svg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'><path fill='#000000' d='M21.3,-37.1C27.7,-33.3,32.9,-27.6,37.3,-21.2C41.8,-14.7,45.5,-7.3,45.1,-0.2C44.7,6.9,40.2,13.8,35.9,20.5C31.6,27.2,27.5,33.8,21.5,38.1C15.6,42.4,7.8,44.4,0,44.4C-7.7,44.4,-15.5,42.3,-21.7,38.1C-27.9,34,-32.5,27.7,-35.8,21C-39.1,14.3,-40.9,7.2,-40.2,0.4C-39.6,-6.4,-36.4,-12.8,-32.6,-18.6C-28.9,-24.5,-24.6,-29.9,-19.1,-34.1C-13.6,-38.3,-6.8,-41.4,0.4,-42C7.5,-42.7,15,-40.8,21.3,-37.1Z' /></svg>",
};



    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _module = await JS.InvokeAsync<IJSObjectReference>("import", "./js/modules/layers/elementLayer.js");
        }
    }

    private void AddRectangle()
    {
        _module?.InvokeVoidAsync("addRectangle");
    }

    private void AddCircle()
    {
        _module?.InvokeVoidAsync("addCircle");
    }

    private void AddTriangle()
    {
        _module?.InvokeVoidAsync("addTriangle");
    }

    private void AddElement(string element)
    {
        _module?.InvokeVoidAsync("addElement", element);
    }
}
