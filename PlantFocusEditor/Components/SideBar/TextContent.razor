@inject IJSRuntime JS

<article class="text-content">
    @* <h3>Basic text</h3> *@
    <div class="texts">
        <button class="text-header" @onclick="@(() => AddTextField("title"))">
            New title
            @((MarkupString)CustomIcons.Plus())
        </button>
        <button class="text-subheader" @onclick="@(() => AddTextField("subtitle"))">
            New subtitle
            @((MarkupString)CustomIcons.Plus())
        </button>
        <button class="text-paragraph" @onclick="@(() => AddTextField("paragraph"))">
            New paragraph
            @((MarkupString)CustomIcons.Plus())
        </button>
    </div>
</article>

@code {
    private IJSObjectReference? module;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            module = await JS.InvokeAsync<IJSObjectReference>("import", "./js/modules/layers/textLayer.js");
        }
    }

    async Task AddTextField(string type)
    {
        if (module != null)
        {
            await module.InvokeVoidAsync("createTextLayer", type);
        }
    }
}
