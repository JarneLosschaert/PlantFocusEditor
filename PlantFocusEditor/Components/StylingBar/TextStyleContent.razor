<article class="text-style-content">
    <div>
        <h3>General</h3>
        <div>
            <div>
                <h4>Font</h4>
                <div>
                    <select>
                        <option>Times New Roman</option>
                        <option>Arial</option>
                        <option>Verdana</option>
                        <option>Georgia</option>
                        <option>Comic Sans MS</option>
                    </select>
                    <div class="icon">
                        @((MarkupString)CustomIcons.ChevronDown())
                    </div>
                </div>

            </div>
            <div>
                <h4>Style</h4>
                <div>
                    <button class="selected">@((MarkupString)CustomIcons.Bold())</button>
                    <button>@((MarkupString)CustomIcons.Italic())</button>
                    <button>@((MarkupString)CustomIcons.Underline())</button>
                </div>
            </div>
            <div>
                <h4>Size</h4>
                <div>
                    <input type="number" />
                </div>
            </div>
            <div>
                <h4>Color</h4>
                <div class="color-input">
                    <input type="text" />
                    <input type="color" />
                </div>
            </div>
            <div>
                <h4>Align</h4>
                <div class="align-input">
                    <button class="selected">@((MarkupString)CustomIcons.AlignLeft())</button>
                    <button>@((MarkupString)CustomIcons.AlignCenter())</button>
                    <button>@((MarkupString)CustomIcons.AlignRight())</button>
                </div>
            </div>
        </div>
    </div>
    <div>
        <h3>Appearance</h3>
        <div>
            <div>
                <h4>Opacity</h4>
                <div>
                    <input type="range" />
                </div>
            </div>
            <div>
                <h4>Shadow</h4>
                <div>
                    <input type="range" />
                </div>
            </div>
        </div>
    </div>
    <div>
        <h3>Elements</h3>
        <div class="elements-style-content">
            <div class="controls">
                <button>
                    @((MarkupString)CustomIcons.Lock())
                    Lock
                </button>
                <button>
                    @((MarkupString)CustomIcons.Clone())
                    Clone
                </button>
                <button>
                    @((MarkupString)CustomIcons.Trash())
                    Delete
                </button>
            </div>
            <div class="position">
                <button @onclick="togglePositionPopup">
                    @((MarkupString)CustomIcons.Layers())
                    Position
                </button>
            </div>
            @if(_isPositionPopupVisible)
            {
                <div class="position-popup">
                    <ul>
                        <li>
                            @((MarkupString)CustomIcons.Front())
                            Bring to front
                        </li>
                        <li>
                            @((MarkupString)CustomIcons.Forward())
                            Bring forward
                        </li>
                        <li>
                            @((MarkupString)CustomIcons.Backward())
                            Send backward
                        </li>
                        <li>
                            @((MarkupString)CustomIcons.Back())
                            Send to back
                        </li>
                    </ul>
                </div>
            }
        </div>
    </div>

</article>

@code {
    private bool _isPositionPopupVisible = false;

    private void togglePositionPopup()
    {
        _isPositionPopupVisible = !_isPositionPopupVisible;
    }
}
