@inject IJSRuntime JS

<section class="styling-bar">
    <div class="content-header">
        <h2>@(_selectedNode == "" ? "Styling bar" : _selectedNode)</h2>
    </div>
    <div class="content">
        @switch (_selectedNode)
        {
            case "Text":
                <TextStyleContent Module="_textModule"/>
                <AppearanceContent Module="_module"/>
                <ControlContent Module="_controlBarModule" />
                break;
            case "Image":
                <ImageStyleContent Module="_imageModule"/>
                <AppearanceContent Module="_module" />
                <BorderContent Module="_module" />
                <ControlContent Module="_controlBarModule" />
                break;
            case "Shape":
                <ElementStyleContent Module="_shapeModule" />
                <AppearanceContent Module="_module" />
                <BorderContent Module="_module"/>
                <ControlContent Module="_controlBarModule" />
                break;
            case "Selecting":
                <AppearanceContent Module="_module" />
                <ControlContent Module="_controlBarModule" />
                break;
            default:
                <LabelStyleContent />
                break;
        }
    </div>
</section>

@code {
    private bool selecting = true;
    private string _selectedNode = "";
    private IJSObjectReference? _module;
    private IJSObjectReference? _textModule;
    private IJSObjectReference? _imageModule;
    private IJSObjectReference? _controlBarModule;
    private IJSObjectReference? _shapeModule;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _module = await JS.InvokeAsync<IJSObjectReference>("import", "./js/modules/stylingBar.js");
            _textModule = await JS.InvokeAsync<IJSObjectReference>("import", "./js/modules/textStylingBar.js");
            _imageModule = await JS.InvokeAsync<IJSObjectReference>("import", "./js/modules/imageShapeStylingBar.js");
            _controlBarModule = await JS.InvokeAsync<IJSObjectReference>("import", "./js/modules/controlBar.js");
            _shapeModule = await JS.InvokeAsync<IJSObjectReference>("import", "./js/modules/imageShapeStylingBar.js");
        }
    }

    public async Task SetSelectedItem()
    {
        _selectedNode = await _module.InvokeAsync<string>("getSelectedItemType");
        StateHasChanged();
    }
}
