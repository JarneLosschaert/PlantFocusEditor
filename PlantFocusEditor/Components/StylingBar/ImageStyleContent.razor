@inject IJSRuntime JS

<article class="image-style-content">
    <h3>Image</h3>
    <div>
        <div>
            <label for="change-image-image">
                <img src="@currentImageSrc" id="current-image" alt="img">
            </label>
            <InputFile id="change-image-image" class="input-file" OnChange="ChangeImage"></InputFile>
        </div>
        <div>
            <label for="change-image-button">
                Change image
            </label>
            <InputFile id="change-image-button" class="input-file" OnChange="ChangeImage"></InputFile>
        </div>
    </div>
</article>

@code {
    private IJSObjectReference? _module;
    private string currentImageSrc = "../../sample-data/flower.jpg";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _module = await JS.InvokeAsync<IJSObjectReference>("import", "./js/modules/imageShapeStylingBar.js");
        }
    }

    private async Task ChangeImage(InputFileChangeEventArgs e)
    {
        var selectedImage = e.File;
        if (selectedImage != null)
        {
            using var memoryStream = new MemoryStream();
            await selectedImage.OpenReadStream().CopyToAsync(memoryStream);
            var imageBytes = memoryStream.ToArray();

            currentImageSrc = $"data:{selectedImage.ContentType};base64,{Convert.ToBase64String(imageBytes)}";
            if (_module != null)
            {
                await _module.InvokeVoidAsync("changeImage", currentImageSrc);
            }
        }
        else
        {
            currentImageSrc = "";
        }
    }
}